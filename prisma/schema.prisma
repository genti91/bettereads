generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          String     @id @default(cuid())
  title       String
  author      String
  description String
  imageUrl    String
  pageAmount  Int
  editorial   String
  genres      Genre[]    @relation("BookGenres")
  reviews     Review[]
  shelves     Shelf[]    @relation("BookShelves")
  rating      Float      @default(0)
  userId      String
  user        User       @relation(fields: [userId], references: [id], name: "BookUser")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Activity    Activity[]
}

model Review {
  id          String     @id @default(cuid())
  rating      Float
  description String
  user        User       @relation(references: [id], fields: [userId])
  userId      String
  Book        Book       @relation(fields: [bookId], references: [id])
  bookId      String
  createdAt   DateTime   @default(now())
  Activity    Activity[]
}

model User {
  id        String      @id @default(cuid())
  username  String      @unique
  password  String
  books     Book[]      @relation("BookUser")
  reviews   Review[]
  shelves   Shelf[]
  followers Follows[]   @relation("following")
  following Follows[]   @relation("follower")
  challenges Challenge[]
  name      String
  picture   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Activity  Activity[]
}

model Follows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Genre {
  id    String @id @default(cuid())
  name  String @unique
  books Book[] @relation("BookGenres")
}

enum ShelfType {
  DEFAULT
  CUSTOM
}

model Shelf {
  id        String     @id @default(cuid())
  name      String
  type      ShelfType  @default(DEFAULT)
  books     Book[]     @relation("BookShelves")
  User      User       @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Activity  Activity[]
}

model Activity {
  id        String       @id @default(cuid())
  type      ActivityType
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  bookId    String?
  book      Book?        @relation(fields: [bookId], references: [id])
  shelfId   String?
  shelf     Shelf?       @relation(fields: [shelfId], references: [id])
  reviewId  String?
  review    Review?      @relation(fields: [reviewId], references: [id])
  createdAt DateTime     @default(now())
}

enum ActivityType {
  ADD_TO_SHELF
  ADD_REVIEW
}

model Challenge {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
