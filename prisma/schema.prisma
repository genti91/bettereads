// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          String   @id @default(cuid())
  title       String
  author      String
  description String
  imageUrl    String
  pageAmount  Int
  editorial   String
  genres      Genre[]  @relation("BookGenres")
  reviews     Review[]
  shelves     Shelve[] @relation("BookShelves")
  userId      String
  user        User     @relation(fields: [userId], references: [id], name: "BookUser")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id          String   @id @default(cuid())
  rating      Float
  description String
  user        User     @relation(references: [id], fields: [userId])
  userId      String
  Book        Book     @relation(fields: [bookId], references: [id])
  bookId      String
  createdAt   DateTime @default(now())
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  books     Book[]   @relation("BookUser")
  Review    Review[]
  shelves   Shelve[]
  name      String
  picture   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Genre {
  id    String @id @default(cuid())
  name  String @unique
  books Book[] @relation("BookGenres")
}

enum ShelfType {
  DEFAULT
  CUSTOM
}

model Shelve {
  id        String    @id @default(cuid())
  name      String
  type      ShelfType @default(DEFAULT)
  books     Book[]    @relation("BookShelves")
  User      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
